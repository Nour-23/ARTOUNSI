{% extends 'base2.html.twig' %}

{% block title %}Reclamation Index{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1 class="text-center mb-4">Reclamation Index</h1>

        <div class="container">
      <div class="row justify-content-start">
        <div class="col-auto">
                <div class="input-group">
             <input type="search" class="form-control" placeholder="Search Reclamation" aria-controls="DataTables_Table_0" id="reclamation_search">
    <!-- Bouton pour démarrer la recherche vocale -->
     
            <button class="btn" type="button" style="background-color: transparent; border: none;" onclick="startSpeechRecognition()">
                <img src="{{ asset('../assets/micro.png') }}" alt="Microphone" style="width: 30px; height: 30px;"> <!-- Image du microphone -->
            </button>
            </div>
        </div>
    </div>

<script>
    // Fonction pour effectuer la recherche dynamique
    function searchReclamation(keyword) {
        var tableRows = document.querySelectorAll('.table tbody tr');
        var searchInput = keyword.trim().toLowerCase();

        tableRows.forEach(function (row) {
            var cells = row.querySelectorAll('td');
            var found = false;

            cells.forEach(function (cell) {
                if (cell.textContent.trim().toLowerCase().includes(searchInput)) {
                    found = true;
                }
            });

            if (found) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    // Fonction pour démarrer la reconnaissance vocale
    function startSpeechRecognition() {
        // Démarrer la reconnaissance vocale
        const recognition = new webkitSpeechRecognition() || new SpeechRecognition();
        recognition.lang = 'fr-FR'; // Définir la langue de la reconnaissance vocale (facultatif)
        recognition.start();

        // Écouter les résultats de la reconnaissance vocale
        recognition.onresult = function(event) {
            const recognizedText = event.results[0][0].transcript.trim(); // Récupérer le texte reconnu
            const cleanedText = recognizedText.endsWith('.') ? recognizedText.slice(0, -1) : recognizedText; // Supprimer le dernier caractère s'il s'agit d'un point
            document.getElementById('reclamation_search').value = cleanedText; // Afficher le résultat dans le champ de recherche

            // Appel de la fonction de recherche lorsque du texte est reconnu
            searchReclamation(cleanedText); 
        };

        // Gérer les erreurs éventuelles de la reconnaissance vocale
        recognition.onerror = function(event) {
            console.error('Erreur de reconnaissance vocale:', event.error);
        };
    }

    document.addEventListener('DOMContentLoaded', function () {
        // Event listener pour la saisie clavier
        var searchInput = document.getElementById('reclamation_search');
        if (searchInput) {
            searchInput.addEventListener('keyup', function () {
                var searchText = this.value;
                searchReclamation(searchText);
            });
        }
    });
</script>
</div>
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover text-center align-middle shadow-lg">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                {% for reclamation in reclamations %}
                    <tr>
                        <td>{{ reclamation.id }}</td>
                        <td>{{ reclamation.titre }}</td>
                        <td class="text-truncate" style="max-width: 250px;">{{ reclamation.description }}</td>
                        <td>
                            {% if reclamation.statut == 'Pending' %}
                                <span class="badge bg-warning text-dark">{{ reclamation.statut }}</span>
                            {% elseif reclamation.statut == 'Resolved' %}
                                <span class="badge bg-success">{{ reclamation.statut }}</span>
                            {% else %}
                                <span class="badge bg-secondary">{{ reclamation.statut }}</span>
                            {% endif %}
                        </td>
                        <td>
                            <a href="{{ path('app_reclamation_show', {'id': reclamation.id}) }}" class="btn btn-info btn-sm">
                                <i class="fas fa-eye"></i> Show
                            </a>
                            <a href="{{ path('app_reclamation_edit', {'id': reclamation.id}) }}" class="btn btn-primary btn-sm">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="5" class="text-center text-muted">No records found</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="text-center mt-4">
            <a href="{{ path('app_reclamation_new') }}" class="btn btn-success">
                <i class="fas fa-plus"></i> Create New Reclamation
            </a>
        </div>
        
    </div>
    <div class="text-center mb-4">
            <a href="{{ path('app_reclamation_export') }}" class="btn btn-success">
                <i class="fas fa-file-excel"></i> Export to Excel
            </a>
        </div>

    <style>
        .table {
            border-radius: 10px;
            overflow: hidden;
        }
        .table th, .table td {
            vertical-align: middle;
        }
        .table th {
            text-transform: uppercase;
            font-size: 14px;
        }
        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }
        .badge {
            font-size: 14px;
            padding: 6px 10px;
            border-radius: 12px;
        }
    </style>
{% endblock %}